print(pcPath)
dataFile<-file(pcPath, "r")
pollution<-read.csv(
dataFile
,numerals="allow.loss"
,colClasses=classes
)
fileData<-as.matrix(pollution)
i<-1
while(i<=nrow(fileData))
{
riga<-fileData[i,]
if((is.na(riga[2])|is.na(riga[3])) == FALSE)
{
contaCompleti<-contaCompleti+1
sulfate<-c(sulfate,as.numeric(riga[2]))
nitrate<-c(nitrate,as.numeric(riga[3]))
}
i<-i+1
}
if(contaCompleti>threshold)
{
correlation<-cor(sulfate,nitrate)
total<-c(total,correlation)
}
close(dataFile)
fileIndex<-fileIndex+1
}
return(total)
}
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
summary(cr)
source("generalFunction.R")
corr <- function(directory, threshold = 0)
{
classes <- c("Date","numeric","numeric","integer")
total<-c()
sulfate<-c()
nitrate<-c()
fileIndex<-1
while (fileIndex<=332)
{
contaCompleti<-0
percorsi<-creaPercorsiFile(directory,fileIndex)
urlPath<-percorsi[1]
pcPath<-percorsi[2]
if (file.exists(pcPath)==FALSE)
{
download.file(urlPath, pcPath, quiet=TRUE)
}
dataFile<-file(pcPath, "r")
pollution<-read.csv(
dataFile
,numerals="allow.loss"
,colClasses=classes
)
fileData<-as.matrix(pollution)
i<-1
while(i<=nrow(fileData))
{
riga<-fileData[i,]
if((is.na(riga[2])|is.na(riga[3])) == FALSE)
{
contaCompleti<-contaCompleti+1
sulfate<-c(sulfate,as.numeric(riga[2]))
nitrate<-c(nitrate,as.numeric(riga[3]))
}
i<-i+1
}
if(contaCompleti>threshold)
{
correlation<-cor(sulfate,nitrate)
total<-c(total,correlation)
}
close(dataFile)
fileIndex<-fileIndex+1
}
return(total)
}
cr <- corr("specdata")
lenght(cr)
length(cr)
summary(cr)
source("generalFunction.R")
corr <- function(directory, threshold = 0)
{
classes <- c("Date","numeric","numeric","integer")
total<-c()
sulfate<-c()
nitrate<-c()
fileIndex<-1
while (fileIndex<=332)
{
contaCompleti<-0
percorsi<-creaPercorsiFile(directory,fileIndex)
urlPath<-percorsi[1]
pcPath<-percorsi[2]
if (file.exists(pcPath)==FALSE)
{
download.file(urlPath, pcPath, quiet=TRUE)
}
dataFile<-file(pcPath, "r")
pollution<-read.csv(
dataFile
,numerals="allow.loss"
,colClasses=classes
)
fileData<-as.matrix(pollution)
i<-1
while(i<=nrow(fileData))
{
riga<-fileData[i,]
if((is.na(riga[2])|is.na(riga[3])) == FALSE)
{
contaCompleti<-contaCompleti+1
if(contaCompleti>threshold)
{
sulfate<-c(sulfate,as.numeric(riga[2]))
nitrate<-c(nitrate,as.numeric(riga[3]))
}
}
i<-i+1
}
correlation<-cor(sulfate,nitrate)
total<-c(total,correlation)
close(dataFile)
fileIndex<-fileIndex+1
}
return(total)
}
cr <- corr("specdata",150)
hr(cr)
source("generalFunction.R")
corr <- function(directory, threshold = 0)
{
classes <- c("Date","numeric","numeric","integer")
total<-c()
sulfate<-c()
nitrate<-c()
fileIndex<-1
while (fileIndex<=332)
{
contaCompleti<-0
percorsi<-creaPercorsiFile(directory,fileIndex)
urlPath<-percorsi[1]
pcPath<-percorsi[2]
if (file.exists(pcPath)==FALSE)
{
download.file(urlPath, pcPath, quiet=TRUE)
}
dataFile<-file(pcPath, "r")
pollution<-read.csv(
dataFile
,numerals="allow.loss"
,colClasses=classes
)
fileData<-as.matrix(pollution)
i<-1
while(i<=nrow(fileData))
{
riga<-fileData[i,]
if((is.na(riga[2])|is.na(riga[3])) == FALSE)
{
contaCompleti<-contaCompleti+1
if(contaCompleti>threshold)
{
sulfate<-c(sulfate,as.numeric(riga[2]))
nitrate<-c(nitrate,as.numeric(riga[3]))
}
}
i<-i+1
}
if(contaCompleti>threshold)
{
correlation<-cor(sulfate,nitrate)
total<-c(total,correlation)
}
close(dataFile)
fileIndex<-fileIndex+1
}
return(total)
}
cr <- corr("specdata",150)
source("generalFunction.R")
corr <- function(directory, threshold = 0)
{
classes <- c("Date","numeric","numeric","integer")
total<-c()
sulfate<-c()
nitrate<-c()
fileIndex<-1
while (fileIndex<=332)
{
contaCompleti<-0
percorsi<-creaPercorsiFile(directory,fileIndex)
urlPath<-percorsi[1]
pcPath<-percorsi[2]
if (file.exists(pcPath)==FALSE)
{
download.file(urlPath, pcPath, quiet=TRUE)
}
dataFile<-file(pcPath, "r")
pollution<-read.csv(
dataFile
,numerals="allow.loss"
,colClasses=classes
)
fileData<-as.matrix(pollution)
i<-1
while(i<=nrow(fileData))
{
riga<-fileData[i,]
if((is.na(riga[2])|is.na(riga[3])) == FALSE)
{
contaCompleti<-contaCompleti+1
if(contaCompleti>threshold)
{
sulfate<-c(sulfate,as.numeric(riga[2]))
nitrate<-c(nitrate,as.numeric(riga[3]))
}
}
i<-i+1
}
if(contaCompleti>threshold)
{
correlation<-cor(sulfate,nitrate)
total<-c(total,correlation)
}
close(dataFile)
fileIndex<-fileIndex+1
}
return(total)
}
cr <- corr("specdata",150)
head(cr)
summary(cr)
source("generalFunction.R")
corr <- function(directory, threshold = 0)
{
classes <- c("Date","numeric","numeric","integer")
total<-c()
fileIndex<-1
while (fileIndex<=332)
{
sulfate<-c()
nitrate<-c()
contaCompleti<-0
percorsi<-creaPercorsiFile(directory,fileIndex)
urlPath<-percorsi[1]
pcPath<-percorsi[2]
if (file.exists(pcPath)==FALSE)
{
download.file(urlPath, pcPath, quiet=TRUE)
}
dataFile<-file(pcPath, "r")
pollution<-read.csv(
dataFile
,numerals="allow.loss"
,colClasses=classes
)
fileData<-as.matrix(pollution)
i<-1
while(i<=nrow(fileData))
{
riga<-fileData[i,]
if((is.na(riga[2])|is.na(riga[3])) == FALSE)
{
contaCompleti<-contaCompleti+1
sulfate<-c(sulfate,as.numeric(riga[2]))
nitrate<-c(nitrate,as.numeric(riga[3]))
}
i<-i+1
}
if(contaCompleti>threshold)
{
correlation<-cor(sulfate,nitrate)
total<-c(total,correlation)
}
close(dataFile)
fileIndex<-fileIndex+1
}
return(total)
}
cr <- corr("specdata",150)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x, mean)
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
x
lapply(x, mean)
x <- 1:4
help(runif)
lapply(x, runif)
x <- 1:4
x <- 1:4
x
lapply(x, runif, min = 0, max = 10)
lapply(x, runif, min = 0, max = 10)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
help(elt)
lapply(x, function(elt) elt[,1])
lapply(x, function(elt) elt[,2])
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
lapply(x,mean)
sapply(x,mean)
mean(x)
y<-sapply(x,mean)
y
mean(y)
x <- matrix(rnorm(200), 20, 10)
x
mean(x[2])
mean(x[,2])
help(apply)
ncol(x)
y<-c()
for(i in ncol(x)) {y<-c(y,mean[i])}
for(i in ncol(x)) {y<-c(y,mean[,i])}
y<-c(0)
for(i in ncol(x)) {y<-c(y,mean[,i])}
for(i in ncol(x)) {y<-c(y,mean(x[,i])}
for(i in ncol(x)) {y<-c(y,mean(x[,i])}
for(i in ncol(x)) { y<-c(y,mean(x[,i]) }
for( i in ncol(x) ) { y<-c(y,mean(x[,i]) }
for ( i in ncol(x) )
{
y<-c(y,mean(x[,i])
}
print y
testamelo<-function
{
for (i in ncol(x))
{
y <- c(y,mean(x[,i])
}
return(y)
}
testamelo(x)
testamelo<-function () {
for (i in ncol(x))
{
y <- c(y,mean(x[,i])
}
return(y)
}
testamelo(x)
apply(x, 2, mean)
apply(x,1,sum)
x
x<-cbind(1:4,1:01)
x
x<-cbind(1:4,1:10)
x<-cbind(1:4,1)
x
x<-cbind(1:4,5:8)
x
apply(x,1,sum)
apply(x,2,sum)
apply(x,1,mean)
apply(x,2,mean)
x<-c(2,2,10)
x
x<-c(1:5,23:27,10:14)
x
x<-cbind(1:5,23:27,10:14)
x
x<-rbind(1:5,23:27,10:14)
x
list(rep(1, 4), rep(2, 3), rep(3, 2), rep(4, 1))
mapply(rep, 1:4, 4:1)
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 1, 2)
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 1, 2)
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
mean(noise(5, 1, 2))
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(1, 1, 2)
noise(2, 1, 2)
noise(3, 1, 2)
noise(4, 1, 2)
noise(5, 1, 2)
noise(1:5, 1:5, 2)
noise(1:5, 1:5, 2)
noise(1:5, 1:5, 2)
mapply(noise,1:5,1:5,2)
noise(1:5, 1:5, 2)
help(gl)
gl(2, 8, labels = c("Control", "Treat"))
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x,f,mean)
tapply(x,f,sum)
help(range)
tapply(x,f,range)
tapply(x,f,range,simplify=TRUE)
tapply(x,f,range,simplify=FALSE)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
f <- gl(3, 10)
split(x,f)
help(split)
mean(x)
traceback()
help(lm)
lm(y^x)
traceback()
debug(lm)
lm(y^x)
debug(mean)
x<-c(2,2,10)
mean(x)
library(datasets)
data(iris)
?iris
iris
x<-iris(Sepal.Lenght)
x<-(Sepal.Lenght)
iris
iris["Sepal.Lenght"]
iris["Sepal"]
iris[1]
iris
dataframe.matrix(iris)
iris[$Species=="viriginica"]
iris[$Species=="virginica"]
iris[Species=="virginica"]
iris["Species"=="virginica"]
iris["Species"]
iris$Species
iris$Species=="virginica"
iris$Sepal.Length$Species=="virginica"
help(subset)
subset(iris,$Species=="virginica",Sepal.Length)
subset(iris,Species=="virginica",Sepal.Length)
mean(subset(iris,Species=="virginica",Sepal.Length))
help(undebug)
undebug(mean)
mean(subset(iris,Species=="virginica",Sepal.Length))
x<-subset(iris,Species=="virginica",Sepal.Length)
x
x[1]
x[0]
as.vector(x[0])
y<-as.vector(x[0])
y
y<-as.matrix(x)
y
y[,1]
y[,2]
y[,0]
y[,1]
mean(y[,1])
apply(iris[, 1:4], 2, mean)
colMeans(iris)
apply(iris, 2, mean)
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
?mtcars
sapply(split(mtcars$hp, mtcars$cyl), mean)
x<-sapply(split(mtcars$hp, mtcars$cyl), mean)
x[,3]
x[3]
x[3]-x[1]
debug(ls)
ls
help(ls)
